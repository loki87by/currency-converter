{"version":3,"sources":["components/Header.js","components/Footer.js","components/Background.js","utils/Api.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","Footer","href","rel","target","Background","useState","arr","setArr","symbols","animationTimingFunctionArray","useEffect","setTimeout","el","style","fontSize","Math","ceil","random","left","floor","top","animationName","animationDuration","animationTimingFunction","length","animationFillMode","content","className","map","it","ind","key","apiKey","sorry","getRates","currency","value","fetch","method","headers","apikey","then","response","ok","json","alert","catch","error","console","log","App","currenciesList","setCurrenciesList","rates","setRates","localCurrency","setLocalCurrency","targetCurrency","setTargetCurrency","baseValue","setBaseValue","targetValue","setTargetValue","changeTargetValue","args","thisValue","thisCurrency","thisRates","currentValue","currentCurrency","currentRates","newValue","res","currencies","defaultValue","onChange","e","Object","keys","filter","cur","toLowerCase","type","placeholder","num","integer","fraction","split","stringifyIntegerArray","i","intString","join","stringifyBigValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bd4a1f2a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1>Конвертер валют</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <a\r\n        href=\"https://loki87by.github.io/portfolio/\"\r\n        rel=\"noopener noreferrer\"\r\n        target=\"_blank\"\r\n      >\r\n        &copy; 2022 Алексей Акулич\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Background() {\r\n  const [arr, setArr] = useState([]);\r\n  const symbols = [\r\n    \"$\",\r\n    \"€\",\r\n    \"£\",\r\n    \"¥\",\r\n    \"₴\",\r\n    \"₽\",\r\n    \"¢\",\r\n    \"₣\",\r\n    \"zł\",\r\n    \"Kč\",\r\n    \"₢\",\r\n    \"₺\",\r\n    \"₦\",\r\n    \"₧\",\r\n    \"₨\",\r\n    \"₩\",\r\n    \"₪\",\r\n    \"₫\",\r\n    \"฿\",\r\n    \"₭\",\r\n    \"៛\",\r\n    \"₮\",\r\n    \"₸\",\r\n    \"₲\",\r\n  ];\r\n  const animationTimingFunctionArray = [\r\n    \"linear\",\r\n    \"ease\",\r\n    \"ease-in\",\r\n    \"ease-out\",\r\n  ];\r\n\r\n  const stringStyle = () => {\r\n    return {\r\n      fontSize: Math.ceil(Math.random() * 5) * 2 + 5 + \"vh\",\r\n      left: Math.floor(Math.random() * 90) + \"vw\",\r\n      top: 0,\r\n      animationName: \"rain\",\r\n      animationDuration: Math.ceil(Math.random() * 4) * 2 + 1 + \"s\",\r\n      animationTimingFunction:\r\n        animationTimingFunctionArray[\r\n          Math.floor(Math.random() * animationTimingFunctionArray.length)\r\n        ],\r\n      animationFillMode: \"forwards\",\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      const el = {\r\n        style: stringStyle(),\r\n        content: symbols[Math.floor(Math.random() * symbols.length)],\r\n      };\r\n      setArr([...arr, el]);\r\n    }, 700);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [arr]);\r\n\r\n  return (\r\n    <section className=\"background\">\r\n      {arr.map((it, ind) => (\r\n        <p key={ind} style={it.style}>\r\n          {it.content}\r\n        </p>\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Background;\r\n","const apiKey = \"8Iv0t8apaL2xQPIA3lISZHbz3H6VsN90\";\r\nconst sorry = `Сайт работает в ознакомительном режиме.\r\n  В связи с этим есть ограничения по количеству запросов к информационным службам.\r\n  Если вы вы видите это сообщение значит превышено дневное/месячное ограничение запросов.\r\n  Будьте добры сообщить о неполадках разработчику.\r\n  Приносим извинения за временные неудобства.\r\n  Можете попробовать запустить страницу спустя сутки.\r\n  Спасибо за внимание.`;\r\n\r\nexport function getAllCurrencies() {\r\n  return fetch(\"https://api.apilayer.com/currency_data/list\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      apikey: apiKey,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      } else {\r\n        alert(sorry);\r\n      }\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n}\r\n\r\nexport function getRates(currency) {\r\n  let value = \"USD\";\r\n\r\n  if (currency) {\r\n    value = currency;\r\n  }\r\n  return fetch(\r\n    `https://api.apilayer.com/exchangerates_data/latest?base=${value}`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        apikey: apiKey,\r\n      },\r\n    }\r\n  )\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      } else {\r\n        alert(sorry);\r\n      }\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n}\r\n\r\nexport function getLocalCurrency() {\r\n  return fetch(\"http://ip-api.com/json?fields=currency\", {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      } else {\r\n        alert(sorry);\r\n      }\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Background from \"./Background\";\r\nimport { getLocalCurrency, getRates, getAllCurrencies } from \"../utils/Api\";\r\n\r\nfunction App() {\r\n  const [currenciesList, setCurrenciesList] = useState({});\r\n  const [rates, setRates] = useState({});\r\n  const [localCurrency, setLocalCurrency] = useState(\"\");\r\n  const [targetCurrency, setTargetCurrency] = useState(\"USD\");\r\n  const [baseValue, setBaseValue] = useState(0);\r\n  const [targetValue, setTargetValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getRates().then((res) => {\r\n      setRates(res.rates);\r\n    });\r\n    getLocalCurrency().then((res) => {\r\n      setLocalCurrency(res.currency);\r\n    });\r\n    getAllCurrencies().then((res) => {\r\n      setCurrenciesList(res.currencies);\r\n    });\r\n  }, []);\r\n\r\n  function changeTargetValue(args) {\r\n    const { thisValue, thisCurrency, thisRates } = args;\r\n    let currentValue = baseValue;\r\n    let currentCurrency = localCurrency;\r\n    let currentRates = rates;\r\n\r\n    if (thisValue) {\r\n      currentValue = thisValue;\r\n    }\r\n\r\n    if (thisCurrency) {\r\n      currentCurrency = thisCurrency;\r\n    }\r\n\r\n    if (thisRates) {\r\n      currentRates = thisRates;\r\n    }\r\n    const newValue =\r\n      Math.floor((currentValue / currentRates[currentCurrency]) * 100) / 100;\r\n    setTargetValue(newValue);\r\n  }\r\n\r\n  function changeCurrency(e) {\r\n    const newValue = e.target.value;\r\n    setLocalCurrency(newValue);\r\n    changeTargetValue({ thisCurrency: newValue });\r\n  }\r\n\r\n  function changeBaseValue(e) {\r\n    const newValue = e.target.value;\r\n    setBaseValue(newValue);\r\n    changeTargetValue({ thisValue: newValue });\r\n  }\r\n\r\n  function changeTargetedCurrency(e) {\r\n    const newValue = e.target.value;\r\n    setTargetCurrency(newValue);\r\n    getRates(newValue).then((res) => {\r\n      setRates(res.rates);\r\n      changeTargetValue({ thisRates: res.rates });\r\n    });\r\n  }\r\n\r\n  function stringifyBigValue(num) {\r\n    const integer = Math.floor(num);\r\n    const fraction = (Math.floor((integer - num) * 100) / 100 + \"\").split(\".\");\r\n    const stringifyIntegerArray = `${integer}`.split(\"\");\r\n\r\n    if (stringifyIntegerArray.length < 4) {\r\n      return num;\r\n    }\r\n    for (let i = stringifyIntegerArray.length - 4; i >= 0; i -= 3) {\r\n      stringifyIntegerArray[i] += \",\";\r\n    }\r\n    const intString = stringifyIntegerArray.join(\"\");\r\n    return `${intString}.${fraction[1]}`;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Background />\r\n      <section className=\"page\">\r\n        <h2>Выберите вашу валюту</h2>\r\n        <select defaultValue={localCurrency} onChange={changeCurrency}>\r\n          <option value={localCurrency}>{localCurrency}</option>\r\n          {Object.keys(currenciesList)\r\n            .filter((cur) => cur !== localCurrency)\r\n            .map((currency) => (\r\n              <option key={currency.toLowerCase()} value={currency}>\r\n                {currency}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <input\r\n          type=\"number\"\r\n          value={baseValue > 0 ? baseValue : \"\"}\r\n          placeholder={`Сколько у вас ${localCurrency}`}\r\n          onChange={changeBaseValue}\r\n        />\r\n        <h2>Выберите нужную валюту</h2>\r\n        <select defaultValue={targetCurrency} onChange={changeTargetedCurrency}>\r\n          <option value={targetCurrency}>{targetCurrency}</option>\r\n          {Object.keys(currenciesList)\r\n            .filter((cur) => cur !== (localCurrency || targetCurrency))\r\n            .map((currency) => (\r\n              <option key={currency.toLowerCase()} value={currency}>\r\n                {currency}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        {baseValue > 0 ? (\r\n          <h3>{`Вы получите ${stringifyBigValue(\r\n            targetValue\r\n          )} ${targetCurrency}`}</h3>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './vendor/normalize.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}